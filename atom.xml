<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[0xNaN]]></title>
  <link href="http://0xNaN.github.io/atom.xml" rel="self"/>
  <link href="http://0xNaN.github.io/"/>
  <updated>2015-06-11T00:16:15+02:00</updated>
  <id>http://0xNaN.github.io/</id>
  <author>
    <name><![CDATA[NaN]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[clone and CLONE_PARENT within init]]></title>
    <link href="http://0xNaN.github.io/blog/2015/06/10/clone-and-clone-parent-within-init/"/>
    <updated>2015-06-10T00:00:00+02:00</updated>
    <id>http://0xNaN.github.io/blog/2015/06/10/clone-and-clone-parent-within-init</id>
    <content type="html"><![CDATA[<p>Recently, while reading <code>Linux Kernel Development</code> by Robert Love, I went
a bit deeper about how Linux handles threads.<br />
In the description on the possibiles flags that <code>clone()</code> understands one
has definitly grabbed my curiosity: <code>CLONE_PARENT</code>.<br />
With this flag the child has the same parent as its parent creating a kind of sibling.</p>

<p>So, for example, lets say we have this processes:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">── init
</span><span class="line">   └── foo</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now, if <code>foo</code> exec <code>clone(CLONE_PARENT, stack, bar, void)</code> we’ll have this 
tree:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">── init
</span><span class="line">    ├── bar
</span><span class="line">    └── foo</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The reason why I think is intresting is because it allow to change the 
geometry of the process tree in a non-classical way since usually it grows 
from “left to right” (parent-&gt;child) while with this flag a child can “influence” its parent.</p>

<p>But, what if <code>init</code> process run this code?</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two words about security]]></title>
    <link href="http://0xNaN.github.io/blog/2013/10/12/two-words-about-security/"/>
    <updated>2013-10-12T20:06:00+02:00</updated>
    <id>http://0xNaN.github.io/blog/2013/10/12/two-words-about-security</id>
    <content type="html"><![CDATA[<p>Few days ago I bought an item from a <em>famous</em> online shop.<br />
This site provides a simple game that allows to win points, which afterwards the users can transform to coupons.<br />
It consist in a simple animation which shift 12 baskets from right to the left: the user must shoots a ball and hit the center of the basket.  <!--More -->
Each basket provides points according to is own dimension: if it’s tiny the user gets a lot of points, otherwise he gets less points.<br />
When the time ends, the user can transform the points to coupons: 100pnt for <strong>1$</strong> (for purchases over 10$), 300pnt for <strong>3$</strong>(for purchases over 30$), 4000pnt for <strong>15$</strong>(for purchases over 150$), and so on.<br />
The graphics of the game is really nice and there are a lot of nice effects with HD images.<br />
The game is written in HTML and CSS and the baskets are hidden trough CSS (<code>display</code> propriety), also the value of each basket is set trough a CSS class.<br />
When I saw this I wanted to try a stupid test: change the value of CSS class trough the DevTools of Chrome and run the game.<br />
The result? I’ve completed the game with an incredible amount of points and the server didn’t noticed it!! I was able to trasform all the points to coupons and use them.<br />
This reminded me how much stupid people care about the graphics, forgetting the security of the code, even though there are real money in prize!</p>
]]></content>
  </entry>
  
</feed>
